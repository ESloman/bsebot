name: Build and test image

on:
  push:
    branches: [ "cicd_*"]  # enable this workflow for cicd changes
  pull_request:
    branches: [ "main" ]

jobs:
  build_and_test:
    services:
      mongo:
        image: mongo
        env:
          MONGO_INITDB_DATABASE: bestsummereverpoints
        options: >-
            --health-cmd "echo 'db.runCommand("ping").ok' | mongosh --quiet"
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
            --name bse_mongo
            -p 27017:27017
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    environment: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          username: elliotsloman
          password: ${{ secrets.dockerhub_token }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@818d4b7b91585d195f67373fd9cb0332e31a7175
        with:
          images: elliotsloman/bsebot
          tags: |
            type=sha
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r test-requirements.txt
      - name: Run pytest
        run: |
          pytest
      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            GIT_USER=ESloman
            GIT_PASS=${{ secrets.GIT_PASS }}
            GITHUB_API_KEY=${{ secrets.GIT_API_KEY }}
      - name: Run BSEBot docker image to test
        run: |
          set -ux
          HASH=$(git rev-parse --short "$GITHUB_SHA")
          docker run -d --name bsebot --network="host" -e "DEBUG_MODE=1" -e "DISCORD_TOKEN=${{ secrets.DISCORD_TEST_TOKEN}}" elliotsloman/bsebot:sha-$HASH
          sleep 90
          docker logs bsebot
          E_COUNT=$(docker logs bsebot | { grep -ic 'traceback' || true; })
          echo "Found ${E_COUNT} errors"
          if [[ "${E_COUNT}" -ge "1" ]]; then exit 1; fi
