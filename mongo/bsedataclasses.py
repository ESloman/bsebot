"""
This is a file for Collection Classes in a MongoDB database.

A MongoDB database can have lots of Collections (basically tables). Each Collection should have a class here
that provides methods for interacting with that Collection.

This particular file contains Collection Classes for the 'bestsummereverpoints' DB.
"""

import random

from mongo import interface
from mongo.db_classes import BestSummerEverPointsDB


class AutoGeneratedBets(BestSummerEverPointsDB):
    """
    Class for interacting with the 'autogeneratedbets' MongoDB collection in the 'bestsummereverpoints' DB
    """
    def __init__(self):
        """
        Constructor method that initialises the vault object
        """
        super().__init__()
        self._vault = interface.get_collection(self.database, "autogeneratedbets")

    def insert_generated_bet(self, scenario_type: str, title: str, options: list):
        """
        Insert a bet into the DB that we can pull out later.

        :param scenario_type:
        :param title:
        :param options:
        :return:
        """

        document = {
            "type": scenario_type,
            "title": title,
            "options": options
        }

        self.insert(document)

    def get_bets_for_type(self, scenario_type: str) -> list:
        """
        Gets ALL bets for a specified type

        :param scenario_type:
        :return:
        """
        rets = self.query({"type": scenario_type})
        return rets

    def get_random_bets_for_type(self, scenario_type: str, amount: int = 3) -> list:
        """
        Gets a random sample of bets for a specified type

        :param scenario_type:
        :param amount:
        :return:
        """
        rets = self.get_bets_for_type(scenario_type)
        return random.sample(rets, amount)
