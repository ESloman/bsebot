[project]
name = "BSEBot"
description = "Discord bot for BSE Server."
version = "2.6.0"
requires-python = ">= 3.12"

readme = "README.md"
license = {file = "LICENSE"}

authors = [
  {name = "Elliot Sloman", email = "elliot.sloman@hotmail.com"},
]
maintainers = [
  {name = "Elliot Sloman", email = "elliot.sloman@hotmail.com"},
]

[project.urls]
Documentation = "https://github.com/esloman/bsebot/wiki"
Repository = "https://github.com/esloman/bsebot.git"
Issues = "https://github.com/esloman/bsebot/issues"
Changelog = "https://github.com/esloman/bsebot/blob/master/CHANGELOG.md"

[tool.coverage.run]
branch = true
relative_files = true
omit = ['tests/*', ]
source = ['.', ]

#
# Semantic Release Stuff
#

[tool.semantic_release]
assets = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
tag_format = "v{version}"
upload_to_pypi = false
upload_to_release = true
version_toml = [
    "pyproject.toml:project.version",
]
version_variables = ["discordbot/__init__.py:__version__"]

[tool.semantic_release.branches.main]
match = "main"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
default_bump_level = 0

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = true

[tool.semantic_release.remote.token]
env = "GH_TOKEN"

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = false
