
# list of rules here: https://beta.ruff.rs/docs/rules/#ruff-specific-rules-ruf
# we enable most of the relevant ones and explicitly exclude the ones we're not interested
select = ["ALL"]
ignore = [
    # ruleset ignores
    "AIR", "BLE", "DJ", "DTZ", "EM", "FA", "FBT", "FIX", "INP", "ISC", "NPY", "PD", "PGH", "PTH", "SLOT", "T10", "T20", 
    # specific rule ignores
    "ANN101", # missing-type-self: happy for self to not have type annotations
    "COM812", # missing-trailing-comma: ruff-format recommends disabling
    "CPY001", # missing-copyright-notice: don't care
    "D301",   # escape-sequence-in-docstring: too many false positives
    "D412",   # blank-lines-between-header-and-content: need blanklines in module docstrings for docs formatting
    "D417",   # undocumented-param: doesn't work with 'NAME (type): DESC' convention we use
    "EXE001", # shebang-not-executable: only works on unix systems - not great for mixed OS development
    "S311",   # suspicious-non-cryptographic-random-usage: not doing anything cryptographic with random
    "PLR0914",# too-many-local-variables: don't care about this fore now
]

fixable = ["ALL"]
unfixable = []

exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".github",
    ".vscode",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pycache__",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "wvenv",
    "docs/",
    "datafiles"
]

line-length = 120
dummy-variable-rgx = "^_$"

target-version = "py312"

[mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[per-file-ignores]
"*/*__init__.py" = [
    "D104",  # undocumented-public-package: happy for __init__'s not to have docstrings
    "F401",  # unused-import: okay for __init__'s to have unused imports
]
"tests/**/*.py" = [
    "ARG001",  # unused-function-argument: allowed in tests
    "ARG002",  # unused-function-method: allowed in tests
    "ANN002",  # missing-type-args: not interested in type annotating *args for tests
    "ANN003",  # missing-type-kwargs: not interested in type annotating **kwargs for tests
    "ANN201",  # missing-return-type-undocumented-public-function: not bothered about type annotations in tests
    "D101",    # undocumented-public-class: not bothered about fully documented test classes
    "PLR2004", # magic-value-comparison: not bothered about 'magic' values in tests
    "PLR6301", # don't care that test methods could be static - legit usecase when using pytest parameters
    "S101",    # assert: assert is expected in test classes
    "S105",    # hardcoded-password-string: we use fake passwords during tests for mocked requests
    "S106",    # hardcoded-password-func-arg: we use fake passwords during tests for mocked requests
    "SLF001",  # private-member-access: private member access is allowed in tests for testing methods
    "TRY301",  # raise-within-try: need to raise exceptions within try in testing for tests
]

[pydocstyle]
convention = "google"

[pylint]
max-args = 6

[lint]
preview = true

[format]
preview = true
